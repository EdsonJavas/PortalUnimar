{
  "version": 3,
  "sources": ["../../unenv/dist/runtime/node/util.mjs", "../../unenv/dist/runtime/node/internal/util/promisify.mjs", "../../unenv/dist/runtime/node/internal/util/legacy-types.mjs", "../../@cloudflare/unenv-preset/dist/runtime/node/util.mjs"],
  "sourcesContent": ["import types from \"node:util/types\";\r\nimport { notImplemented } from \"../_internal/utils.mjs\";\r\nimport { inherits } from \"./internal/util/inherits.mjs\";\r\nimport { promisify } from \"./internal/util/promisify.mjs\";\r\nimport { MIMEParams, MIMEType } from \"./internal/util/mime.mjs\";\r\nimport { isArray, isBoolean, isBuffer, isDate, isDeepStrictEqual, isError, isFunction, isNull, isNullOrUndefined, isNumber, isObject, isPrimitive, isRegExp, isString, isSymbol, isUndefined } from \"./internal/util/legacy-types.mjs\";\r\nimport { debug, debuglog, format, formatWithOptions, inspect, log } from \"./internal/util/log.mjs\";\r\nexport { MIMEParams, MIMEType } from \"./internal/util/mime.mjs\";\r\nexport * from \"./internal/util/legacy-types.mjs\";\r\nexport * from \"./internal/util/log.mjs\";\r\nexport { inherits } from \"./internal/util/inherits.mjs\";\r\nexport { promisify } from \"./internal/util/promisify.mjs\";\r\nexport { default as types } from \"node:util/types\";\r\n// @ts-expect-error\r\nexport const TextDecoder = globalThis.TextDecoder;\r\nexport const TextEncoder = globalThis.TextEncoder;\r\nexport const deprecate = (fn) => fn;\r\nexport const _errnoException = /* @__PURE__ */ notImplemented(\"util._errnoException\");\r\nexport const _exceptionWithHostPort = /* @__PURE__ */ notImplemented(\"util._exceptionWithHostPort\");\r\nexport const _extend = /* @__PURE__ */ notImplemented(\"util._extend\");\r\nexport const aborted = /* @__PURE__ */ notImplemented(\"util.aborted\");\r\nexport const callbackify = /* @__PURE__ */ notImplemented(\"util.callbackify\");\r\nexport const getSystemErrorMap = /* @__PURE__ */ notImplemented(\"util.getSystemErrorMap\");\r\nexport const getSystemErrorName = /* @__PURE__ */ notImplemented(\"util.getSystemErrorName\");\r\nexport const toUSVString = /* @__PURE__ */ notImplemented(\"util.toUSVString\");\r\nexport const stripVTControlCharacters = /* @__PURE__ */ notImplemented(\"util.stripVTControlCharacters\");\r\nexport const transferableAbortController = /* @__PURE__ */ notImplemented(\"util.transferableAbortController\");\r\nexport const transferableAbortSignal = /* @__PURE__ */ notImplemented(\"util.transferableAbortSignal\");\r\nexport const parseArgs = /* @__PURE__ */ notImplemented(\"util.parseArgs\");\r\nexport const parseEnv = /* @__PURE__ */ notImplemented(\"util.parseEnv\");\r\nexport const styleText = /* @__PURE__ */ notImplemented(\"util.styleText\");\r\n/** @deprecated */\r\nexport const getCallSite = /* @__PURE__ */ notImplemented(\"util.getCallSite\");\r\nexport const getCallSites = /* @__PURE__ */ notImplemented(\"util.getCallSites\");\r\nexport const getSystemErrorMessage = /* @__PURE__ */ notImplemented(\"util.getSystemErrorMessage\");\r\nexport default {\r\n\t_errnoException,\r\n\t_exceptionWithHostPort,\r\n\t_extend,\r\n\taborted,\r\n\tcallbackify,\r\n\tdeprecate,\r\n\tgetCallSite,\r\n\tgetCallSites,\r\n\tgetSystemErrorMessage,\r\n\tgetSystemErrorMap,\r\n\tgetSystemErrorName,\r\n\tinherits,\r\n\tpromisify,\r\n\tstripVTControlCharacters,\r\n\ttoUSVString,\r\n\tTextDecoder,\r\n\tTextEncoder,\r\n\ttypes,\r\n\ttransferableAbortController,\r\n\ttransferableAbortSignal,\r\n\tparseArgs,\r\n\tparseEnv,\r\n\tstyleText,\r\n\tMIMEParams,\r\n\tMIMEType,\r\n\tisArray,\r\n\tisBoolean,\r\n\tisBuffer,\r\n\tisDate,\r\n\tisDeepStrictEqual,\r\n\tisError,\r\n\tisFunction,\r\n\tisNull,\r\n\tisNullOrUndefined,\r\n\tisNumber,\r\n\tisObject,\r\n\tisPrimitive,\r\n\tisRegExp,\r\n\tisString,\r\n\tisSymbol,\r\n\tisUndefined,\r\n\tdebug,\r\n\tdebuglog,\r\n\tformat,\r\n\tformatWithOptions,\r\n\tinspect,\r\n\tlog\r\n};\r\n", "const customSymbol = /* @__PURE__ */ Symbol(\"customPromisify\");\r\nfunction _promisify(fn) {\r\n\tif (fn[customSymbol]) {\r\n\t\treturn fn[customSymbol];\r\n\t}\r\n\treturn function(...args) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tfn.call(this, ...args, (err, val) => {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treturn reject(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(val);\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\treject(error);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n}\r\n// @ts-ignore\r\nexport const promisify = /* @__PURE__ */ Object.assign(_promisify, { custom: customSymbol });\r\n", "export const isRegExp = (val) => val instanceof RegExp;\r\nexport const isDate = (val) => val instanceof Date;\r\nexport const isArray = (val) => Array.isArray(val);\r\nexport const isBoolean = (val) => typeof val === \"boolean\";\r\nexport const isNull = (val) => val === null;\r\nexport const isNullOrUndefined = (val) => val === null || val === undefined;\r\nexport const isNumber = (val) => typeof val === \"number\";\r\nexport const isString = (val) => typeof val === \"string\";\r\nexport const isSymbol = (val) => typeof val === \"symbol\";\r\nexport const isUndefined = (val) => val === undefined;\r\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\r\nexport const isFunction = (val) => typeof val === \"function\";\r\nexport const isBuffer = (val) => {\r\n\treturn val && typeof val === \"object\" && typeof val.copy === \"function\" && typeof val.fill === \"function\" && typeof val.readUInt8 === \"function\";\r\n};\r\nexport const isDeepStrictEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\r\nexport const isObject = (val) => val !== null && typeof val === \"object\" && Object.getPrototypeOf(val).isPrototypeOf(Object);\r\nexport const isError = (val) => val instanceof Error;\r\n// Source https://github.com/jonschlinkert/is-primitive/blob/b22c524da5cbac075f14145780ec4b3637afd7dc/index.js\r\nexport const isPrimitive = (val) => {\r\n\tif (typeof val === \"object\") {\r\n\t\treturn val === null;\r\n\t}\r\n\treturn typeof val !== \"function\";\r\n};\r\n", "import {\r\n  _errnoException,\r\n  _exceptionWithHostPort,\r\n  getSystemErrorMap,\r\n  getSystemErrorName,\r\n  isBoolean,\r\n  isBuffer,\r\n  isDate,\r\n  isError,\r\n  isFunction,\r\n  isNull,\r\n  isNullOrUndefined,\r\n  isNumber,\r\n  isObject,\r\n  isPrimitive,\r\n  isRegExp,\r\n  isString,\r\n  isSymbol,\r\n  isUndefined,\r\n  parseEnv,\r\n  styleText\r\n} from \"unenv/node/util\";\r\nexport {\r\n  _errnoException,\r\n  _exceptionWithHostPort,\r\n  getSystemErrorMap,\r\n  getSystemErrorName,\r\n  isBoolean,\r\n  isBuffer,\r\n  isDate,\r\n  isError,\r\n  isFunction,\r\n  isNull,\r\n  isNullOrUndefined,\r\n  isNumber,\r\n  isObject,\r\n  isPrimitive,\r\n  isRegExp,\r\n  isString,\r\n  isSymbol,\r\n  isUndefined,\r\n  parseEnv,\r\n  styleText\r\n} from \"unenv/node/util\";\r\nconst workerdUtil = process.getBuiltinModule(\"node:util\");\r\nexport const {\r\n  MIMEParams,\r\n  MIMEType,\r\n  TextDecoder,\r\n  TextEncoder,\r\n  // @ts-expect-error missing types?\r\n  _extend,\r\n  aborted,\r\n  callbackify,\r\n  debug,\r\n  debuglog,\r\n  deprecate,\r\n  format,\r\n  formatWithOptions,\r\n  // @ts-expect-error unknown type\r\n  getCallSite,\r\n  inherits,\r\n  inspect,\r\n  isArray,\r\n  isDeepStrictEqual,\r\n  log,\r\n  parseArgs,\r\n  promisify,\r\n  stripVTControlCharacters,\r\n  toUSVString,\r\n  transferableAbortController,\r\n  transferableAbortSignal\r\n} = workerdUtil;\r\nexport const types = workerdUtil.types;\r\nexport default {\r\n  /**\r\n   * manually unroll unenv-polyfilled-symbols to make it tree-shakeable\r\n   */\r\n  _errnoException,\r\n  _exceptionWithHostPort,\r\n  // @ts-expect-error unenv has unknown type\r\n  getSystemErrorMap,\r\n  // @ts-expect-error unenv has unknown type\r\n  getSystemErrorName,\r\n  isBoolean,\r\n  isBuffer,\r\n  isDate,\r\n  isError,\r\n  isFunction,\r\n  isNull,\r\n  isNullOrUndefined,\r\n  isNumber,\r\n  isObject,\r\n  isPrimitive,\r\n  isRegExp,\r\n  isString,\r\n  isSymbol,\r\n  isUndefined,\r\n  // @ts-expect-error unenv has unknown type\r\n  parseEnv,\r\n  // @ts-expect-error unenv has unknown type\r\n  styleText,\r\n  /**\r\n   * manually unroll workerd-polyfilled-symbols to make it tree-shakeable\r\n   */\r\n  _extend,\r\n  aborted,\r\n  callbackify,\r\n  debug,\r\n  debuglog,\r\n  deprecate,\r\n  format,\r\n  formatWithOptions,\r\n  getCallSite,\r\n  inherits,\r\n  inspect,\r\n  isArray,\r\n  isDeepStrictEqual,\r\n  log,\r\n  MIMEParams,\r\n  MIMEType,\r\n  parseArgs,\r\n  promisify,\r\n  stripVTControlCharacters,\r\n  TextDecoder,\r\n  TextEncoder,\r\n  toUSVString,\r\n  transferableAbortController,\r\n  transferableAbortSignal,\r\n  // special-cased deep merged symbols\r\n  types\r\n};\r\n"],
  "mappings": "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",
  "names": ["default", "MIMEParams", "MIMEType", "TextDecoder", "TextEncoder", "_extend", "aborted", "callbackify", "debug", "debuglog", "format", "formatWithOptions", "getCallSite", "inherits", "inspect", "isArray", "isDeepStrictEqual", "log", "parseArgs", "promisify", "stripVTControlCharacters", "toUSVString", "transferableAbortController", "transferableAbortSignal", "types"]
}
