{
  "version": 3,
  "sources": ["../../unenv/dist/runtime/node/console.mjs", "../../@cloudflare/unenv-preset/dist/runtime/node/console.mjs"],
  "sourcesContent": ["import { Writable } from \"node:stream\";\r\nimport noop from \"../mock/noop.mjs\";\r\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\r\nconst _console = globalThis.console;\r\n// undocumented public APIs\r\nexport const _ignoreErrors = true;\r\nexport const _stderr = new Writable();\r\nexport const _stdout = new Writable();\r\nexport const log = _console?.log ?? noop;\r\nexport const info = _console?.info ?? log;\r\nexport const trace = _console?.trace ?? info;\r\nexport const debug = _console?.debug ?? log;\r\nexport const table = _console?.table ?? log;\r\nexport const error = _console?.error ?? log;\r\nexport const warn = _console?.warn ?? error;\r\n// https://developer.chrome.com/docs/devtools/console/api#createtask\r\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\r\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\r\n// noop\r\nexport const clear = _console?.clear ?? noop;\r\nexport const count = _console?.count ?? noop;\r\nexport const countReset = _console?.countReset ?? noop;\r\nexport const dir = _console?.dir ?? noop;\r\nexport const dirxml = _console?.dirxml ?? noop;\r\nexport const group = _console?.group ?? noop;\r\nexport const groupEnd = _console?.groupEnd ?? noop;\r\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\r\nexport const profile = _console?.profile ?? noop;\r\nexport const profileEnd = _console?.profileEnd ?? noop;\r\nexport const time = _console?.time ?? noop;\r\nexport const timeEnd = _console?.timeEnd ?? noop;\r\nexport const timeLog = _console?.timeLog ?? noop;\r\nexport const timeStamp = _console?.timeStamp ?? noop;\r\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\r\nexport const _times = /* @__PURE__ */ new Map();\r\nexport function context() {\r\n\t// TODO: Should be Console with all the methods\r\n\treturn _console;\r\n}\r\nexport const _stdoutErrorHandler = noop;\r\nexport const _stderrErrorHandler = noop;\r\nexport default {\r\n\t_times,\r\n\t_ignoreErrors,\r\n\t_stdoutErrorHandler,\r\n\t_stderrErrorHandler,\r\n\t_stdout,\r\n\t_stderr,\r\n\tassert,\r\n\tclear,\r\n\tConsole,\r\n\tcount,\r\n\tcountReset,\r\n\tdebug,\r\n\tdir,\r\n\tdirxml,\r\n\terror,\r\n\tcontext,\r\n\tcreateTask,\r\n\tgroup,\r\n\tgroupEnd,\r\n\tgroupCollapsed,\r\n\tinfo,\r\n\tlog,\r\n\tprofile,\r\n\tprofileEnd,\r\n\ttable,\r\n\ttime,\r\n\ttimeEnd,\r\n\ttimeLog,\r\n\ttimeStamp,\r\n\ttrace,\r\n\twarn\r\n};\r\n", "import {\r\n  _ignoreErrors,\r\n  _stderr,\r\n  _stderrErrorHandler,\r\n  _stdout,\r\n  _stdoutErrorHandler,\r\n  _times,\r\n  Console\r\n} from \"unenv/node/console\";\r\nexport {\r\n  Console,\r\n  _ignoreErrors,\r\n  _stderr,\r\n  _stderrErrorHandler,\r\n  _stdout,\r\n  _stdoutErrorHandler,\r\n  _times\r\n} from \"unenv/node/console\";\r\nconst workerdConsole = globalThis[\"console\"];\r\nexport const {\r\n  assert,\r\n  clear,\r\n  // @ts-expect-error undocumented public API\r\n  context,\r\n  count,\r\n  countReset,\r\n  // @ts-expect-error undocumented public API\r\n  createTask,\r\n  debug,\r\n  dir,\r\n  dirxml,\r\n  error,\r\n  group,\r\n  groupCollapsed,\r\n  groupEnd,\r\n  info,\r\n  log,\r\n  profile,\r\n  profileEnd,\r\n  table,\r\n  time,\r\n  timeEnd,\r\n  timeLog,\r\n  timeStamp,\r\n  trace,\r\n  warn\r\n} = workerdConsole;\r\nObject.assign(workerdConsole, {\r\n  Console,\r\n  _ignoreErrors,\r\n  _stderr,\r\n  _stderrErrorHandler,\r\n  _stdout,\r\n  _stdoutErrorHandler,\r\n  _times\r\n});\r\nexport default workerdConsole;\r\n"],
  "mappings": ";;;;;;;;;;AAAA,SAAS,gBAAgB;AAGzB,IAAM,WAAW,WAAW;AAErB,IAAM,gBAAgB;AACtB,IAAM,UAAU,IAAI,SAAS;AAC7B,IAAM,UAAU,IAAI,SAAS;AAC7B,IAAM,MAAM,UAAU,OAAO;AAC7B,IAAM,OAAO,UAAU,QAAQ;AAC/B,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,OAAO,UAAU,QAAQ;AAE/B,IAAM,aAAa,UAAU,cAA8B,eAAe,oBAAoB;AAC9F,IAAM,SAAyB,eAAe,gBAAgB;AAE9D,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,aAAa,UAAU,cAAc;AAC3C,IAAM,MAAM,UAAU,OAAO;AAC7B,IAAM,SAAS,UAAU,UAAU;AACnC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,WAAW,UAAU,YAAY;AACvC,IAAM,iBAAiB,UAAU,kBAAkB;AACnD,IAAM,UAAU,UAAU,WAAW;AACrC,IAAM,aAAa,UAAU,cAAc;AAC3C,IAAM,OAAO,UAAU,QAAQ;AAC/B,IAAM,UAAU,UAAU,WAAW;AACrC,IAAM,UAAU,UAAU,WAAW;AACrC,IAAM,YAAY,UAAU,aAAa;AACzC,IAAM,UAAU,UAAU,WAA2B,oBAAoB,iBAAiB;AAC1F,IAAM,SAAyB,oBAAI,IAAI;AAKvC,IAAM,sBAAsB;AAC5B,IAAM,sBAAsB;;;ACtBnC,IAAM,iBAAiB,WAAW,SAAS;AACpC,IAAM;AAAA,EACX,QAAAA;AAAA,EACA,OAAAC;AAAA;AAAA,EAEA;AAAA,EACA,OAAAC;AAAA,EACA,YAAAC;AAAA;AAAA,EAEA,YAAAC;AAAA,EACA,OAAAC;AAAA,EACA,KAAAC;AAAA,EACA,QAAAC;AAAA,EACA,OAAAC;AAAA,EACA,OAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,UAAAC;AAAA,EACA,MAAAC;AAAA,EACA,KAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,EACA,OAAAC;AAAA,EACA,MAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,WAAAC;AAAA,EACA,OAAAC;AAAA,EACA,MAAAC;AACF,IAAI;AACJ,OAAO,OAAO,gBAAgB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AACD,IAAO,kBAAQ;",
  "names": ["assert", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn"]
}
