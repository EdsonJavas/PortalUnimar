{
  "version": 3,
  "sources": ["../../unenv/dist/runtime/node/v8.mjs", "../../unenv/dist/runtime/node/internal/v8/deserializer.mjs", "../../unenv/dist/runtime/node/internal/v8/serializer.mjs", "../../unenv/dist/runtime/node/internal/v8/profiler.mjs"],
  "sourcesContent": ["import noop from \"../mock/noop.mjs\";\r\nimport { Readable } from \"node:stream\";\r\nimport { Deserializer, DefaultDeserializer } from \"./internal/v8/deserializer.mjs\";\r\nimport { Serializer, DefaultSerializer } from \"./internal/v8/serializer.mjs\";\r\nimport { GCProfiler } from \"./internal/v8/profiler.mjs\";\r\nexport { Deserializer, DefaultDeserializer } from \"./internal/v8/deserializer.mjs\";\r\nexport { Serializer, DefaultSerializer } from \"./internal/v8/serializer.mjs\";\r\nexport { GCProfiler } from \"./internal/v8/profiler.mjs\";\r\nconst getMockHeapSpaceStats = (name) => ({\r\n\tspace_name: name,\r\n\tspace_size: 0,\r\n\tspace_used_size: 0,\r\n\tspace_available_size: 0,\r\n\tphysical_space_size: 0\r\n});\r\nexport const cachedDataVersionTag = () => 0;\r\nexport const deserialize = noop;\r\nexport const getHeapCodeStatistics = () => ({\r\n\tcode_and_metadata_size: 0,\r\n\tbytecode_and_metadata_size: 0,\r\n\texternal_script_source_size: 0,\r\n\tcpu_profiler_metadata_size: 0\r\n});\r\nexport const getHeapSpaceStatistics = () => [\r\n\t\"read_only_space\",\r\n\t\"new_space\",\r\n\t\"old_space\",\r\n\t\"code_space\",\r\n\t\"map_space\",\r\n\t\"large_object_space\",\r\n\t\"code_large_object_space\",\r\n\t\"new_large_object_space\"\r\n].map((space) => getMockHeapSpaceStats(space));\r\nexport const getHeapStatistics = () => ({\r\n\ttotal_heap_size: 0,\r\n\ttotal_heap_size_executable: 0,\r\n\ttotal_physical_size: 0,\r\n\ttotal_available_size: 0,\r\n\tused_heap_size: 0,\r\n\theap_size_limit: 0,\r\n\tmalloced_memory: 0,\r\n\tpeak_malloced_memory: 0,\r\n\tdoes_zap_garbage: 0,\r\n\tnumber_of_native_contexts: 0,\r\n\tnumber_of_detached_contexts: 0,\r\n\ttotal_global_handles_size: 0,\r\n\tused_global_handles_size: 0,\r\n\texternal_memory: 0\r\n});\r\nexport const getHeapSnapshot = () => {\r\n\treturn Readable.from(`{\r\n    snapshot: {},\r\n    nodes: [],\r\n    edges: [],\r\n    trace_function_infos: [],\r\n    trace_tree: [],\r\n    samples: [],\r\n    locations: [],\r\n    strings: [],\r\n  }`);\r\n};\r\nexport const promiseHooks = {\r\n\tonInit: () => noop,\r\n\tonSettled: () => noop,\r\n\tonBefore: () => noop,\r\n\tonAfter: () => noop,\r\n\tcreateHook: () => noop\r\n};\r\nexport const serialize = (value) => Buffer.from(value);\r\nexport const setFlagsFromString = noop;\r\nexport const setHeapSnapshotNearHeapLimit = noop;\r\nexport const startupSnapshot = {\r\n\taddDeserializeCallback: noop,\r\n\taddSerializeCallback: noop,\r\n\tsetDeserializeMainFunction: noop,\r\n\tisBuildingSnapshot: () => false\r\n};\r\nexport const stopCoverage = noop;\r\nexport const takeCoverage = noop;\r\nexport const writeHeapSnapshot = () => \"\";\r\nexport function queryObjects(_ctor, options) {\r\n\tif (options?.format === \"count\") {\r\n\t\treturn 0;\r\n\t}\r\n\treturn [];\r\n}\r\nexport default {\r\n\tDefaultDeserializer,\r\n\tDeserializer,\r\n\tGCProfiler,\r\n\tDefaultSerializer,\r\n\tSerializer,\r\n\tcachedDataVersionTag,\r\n\tdeserialize,\r\n\tgetHeapCodeStatistics,\r\n\tgetHeapSnapshot,\r\n\tgetHeapSpaceStatistics,\r\n\tgetHeapStatistics,\r\n\tpromiseHooks,\r\n\tserialize,\r\n\tsetFlagsFromString,\r\n\tsetHeapSnapshotNearHeapLimit,\r\n\tstartupSnapshot,\r\n\tstopCoverage,\r\n\ttakeCoverage,\r\n\twriteHeapSnapshot,\r\n\tqueryObjects\r\n};\r\n", "export class Deserializer {\r\n\treadHeader() {\r\n\t\treturn false;\r\n\t}\r\n\treadValue() {}\r\n\ttransferArrayBuffer(id, arrayBuffer) {}\r\n\tgetWireFormatVersion() {\r\n\t\treturn 0;\r\n\t}\r\n\treadUint32() {\r\n\t\treturn 0;\r\n\t}\r\n\treadUint64() {\r\n\t\treturn [0, 0];\r\n\t}\r\n\treadDouble() {\r\n\t\treturn 0;\r\n\t}\r\n\treadRawBytes(length) {\r\n\t\treturn Buffer.from(\"\");\r\n\t}\r\n}\r\nexport class DefaultDeserializer extends Deserializer {}\r\n", "export class Serializer {\r\n\twriteHeader() {}\r\n\twriteValue(val) {\r\n\t\treturn false;\r\n\t}\r\n\treleaseBuffer() {\r\n\t\treturn Buffer.from(\"\");\r\n\t}\r\n\ttransferArrayBuffer(id, arrayBuffer) {}\r\n\twriteDouble(value) {}\r\n\twriteUint32(value) {}\r\n\twriteUint64(hi, lo) {}\r\n\twriteRawBytes(buffer) {}\r\n}\r\nexport class DefaultSerializer extends Serializer {}\r\n", "export class GCProfiler {\r\n\tstart() {}\r\n\tstop() {\r\n\t\treturn {\r\n\t\t\tversion: 1,\r\n\t\t\tstartTime: 0,\r\n\t\t\tendTime: 0,\r\n\t\t\tstatistics: []\r\n\t\t};\r\n\t}\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
