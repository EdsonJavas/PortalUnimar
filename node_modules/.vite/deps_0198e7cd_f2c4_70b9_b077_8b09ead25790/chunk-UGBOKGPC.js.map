{
  "version": 3,
  "sources": ["../../hono/dist/utils/url.js"],
  "sourcesContent": ["// src/utils/url.ts\r\nvar splitPath = (path) => {\r\n  const paths = path.split(\"/\");\r\n  if (paths[0] === \"\") {\r\n    paths.shift();\r\n  }\r\n  return paths;\r\n};\r\nvar splitRoutingPath = (routePath) => {\r\n  const { groups, path } = extractGroupsFromPath(routePath);\r\n  const paths = splitPath(path);\r\n  return replaceGroupMarks(paths, groups);\r\n};\r\nvar extractGroupsFromPath = (path) => {\r\n  const groups = [];\r\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\r\n    const mark = `@${index}`;\r\n    groups.push([mark, match]);\r\n    return mark;\r\n  });\r\n  return { groups, path };\r\n};\r\nvar replaceGroupMarks = (paths, groups) => {\r\n  for (let i = groups.length - 1; i >= 0; i--) {\r\n    const [mark] = groups[i];\r\n    for (let j = paths.length - 1; j >= 0; j--) {\r\n      if (paths[j].includes(mark)) {\r\n        paths[j] = paths[j].replace(mark, groups[i][1]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return paths;\r\n};\r\nvar patternCache = {};\r\nvar getPattern = (label, next) => {\r\n  if (label === \"*\") {\r\n    return \"*\";\r\n  }\r\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\r\n  if (match) {\r\n    const cacheKey = `${label}#${next}`;\r\n    if (!patternCache[cacheKey]) {\r\n      if (match[2]) {\r\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\r\n      } else {\r\n        patternCache[cacheKey] = [label, match[1], true];\r\n      }\r\n    }\r\n    return patternCache[cacheKey];\r\n  }\r\n  return null;\r\n};\r\nvar tryDecode = (str, decoder) => {\r\n  try {\r\n    return decoder(str);\r\n  } catch {\r\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\r\n      try {\r\n        return decoder(match);\r\n      } catch {\r\n        return match;\r\n      }\r\n    });\r\n  }\r\n};\r\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\r\nvar getPath = (request) => {\r\n  const url = request.url;\r\n  const start = url.indexOf(\"/\", 8);\r\n  let i = start;\r\n  for (; i < url.length; i++) {\r\n    const charCode = url.charCodeAt(i);\r\n    if (charCode === 37) {\r\n      const queryIndex = url.indexOf(\"?\", i);\r\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\r\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\r\n    } else if (charCode === 63) {\r\n      break;\r\n    }\r\n  }\r\n  return url.slice(start, i);\r\n};\r\nvar getQueryStrings = (url) => {\r\n  const queryIndex = url.indexOf(\"?\", 8);\r\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\r\n};\r\nvar getPathNoStrict = (request) => {\r\n  const result = getPath(request);\r\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\r\n};\r\nvar mergePath = (base, sub, ...rest) => {\r\n  if (rest.length) {\r\n    sub = mergePath(sub, ...rest);\r\n  }\r\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\r\n};\r\nvar checkOptionalParameter = (path) => {\r\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\r\n    return null;\r\n  }\r\n  const segments = path.split(\"/\");\r\n  const results = [];\r\n  let basePath = \"\";\r\n  segments.forEach((segment) => {\r\n    if (segment !== \"\" && !/\\:/.test(segment)) {\r\n      basePath += \"/\" + segment;\r\n    } else if (/\\:/.test(segment)) {\r\n      if (/\\?/.test(segment)) {\r\n        if (results.length === 0 && basePath === \"\") {\r\n          results.push(\"/\");\r\n        } else {\r\n          results.push(basePath);\r\n        }\r\n        const optionalSegment = segment.replace(\"?\", \"\");\r\n        basePath += \"/\" + optionalSegment;\r\n        results.push(basePath);\r\n      } else {\r\n        basePath += \"/\" + segment;\r\n      }\r\n    }\r\n  });\r\n  return results.filter((v, i, a) => a.indexOf(v) === i);\r\n};\r\nvar _decodeURI = (value) => {\r\n  if (!/[%+]/.test(value)) {\r\n    return value;\r\n  }\r\n  if (value.indexOf(\"+\") !== -1) {\r\n    value = value.replace(/\\+/g, \" \");\r\n  }\r\n  return value.indexOf(\"%\") !== -1 ? decodeURIComponent_(value) : value;\r\n};\r\nvar _getQueryParam = (url, key, multiple) => {\r\n  let encoded;\r\n  if (!multiple && key && !/[%+]/.test(key)) {\r\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\r\n    if (keyIndex2 === -1) {\r\n      keyIndex2 = url.indexOf(`&${key}`, 8);\r\n    }\r\n    while (keyIndex2 !== -1) {\r\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\r\n      if (trailingKeyCode === 61) {\r\n        const valueIndex = keyIndex2 + key.length + 2;\r\n        const endIndex = url.indexOf(\"&\", valueIndex);\r\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\r\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\r\n        return \"\";\r\n      }\r\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\r\n    }\r\n    encoded = /[%+]/.test(url);\r\n    if (!encoded) {\r\n      return void 0;\r\n    }\r\n  }\r\n  const results = {};\r\n  encoded ??= /[%+]/.test(url);\r\n  let keyIndex = url.indexOf(\"?\", 8);\r\n  while (keyIndex !== -1) {\r\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\r\n    let valueIndex = url.indexOf(\"=\", keyIndex);\r\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\r\n      valueIndex = -1;\r\n    }\r\n    let name = url.slice(\r\n      keyIndex + 1,\r\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\r\n    );\r\n    if (encoded) {\r\n      name = _decodeURI(name);\r\n    }\r\n    keyIndex = nextKeyIndex;\r\n    if (name === \"\") {\r\n      continue;\r\n    }\r\n    let value;\r\n    if (valueIndex === -1) {\r\n      value = \"\";\r\n    } else {\r\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\r\n      if (encoded) {\r\n        value = _decodeURI(value);\r\n      }\r\n    }\r\n    if (multiple) {\r\n      if (!(results[name] && Array.isArray(results[name]))) {\r\n        results[name] = [];\r\n      }\r\n      ;\r\n      results[name].push(value);\r\n    } else {\r\n      results[name] ??= value;\r\n    }\r\n  }\r\n  return key ? results[key] : results;\r\n};\r\nvar getQueryParam = _getQueryParam;\r\nvar getQueryParams = (url, key) => {\r\n  return _getQueryParam(url, key, true);\r\n};\r\nvar decodeURIComponent_ = decodeURIComponent;\r\nexport {\r\n  checkOptionalParameter,\r\n  decodeURIComponent_,\r\n  getPath,\r\n  getPathNoStrict,\r\n  getPattern,\r\n  getQueryParam,\r\n  getQueryParams,\r\n  getQueryStrings,\r\n  mergePath,\r\n  splitPath,\r\n  splitRoutingPath,\r\n  tryDecode\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
