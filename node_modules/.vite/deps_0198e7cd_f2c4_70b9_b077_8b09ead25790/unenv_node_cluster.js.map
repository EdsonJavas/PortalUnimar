{
  "version": 3,
  "sources": ["../../unenv/dist/runtime/node/cluster.mjs"],
  "sourcesContent": ["import { EventEmitter } from \"node:events\";\r\nimport { notImplemented } from \"../_internal/utils.mjs\";\r\nexport const SCHED_NONE = 1;\r\nexport const SCHED_RR = 2;\r\nexport const isMaster = true;\r\nexport const isPrimary = true;\r\nexport const isWorker = false;\r\nexport const schedulingPolicy = SCHED_RR;\r\nexport const settings = {};\r\nexport const workers = {};\r\nexport const fork = /* @__PURE__ */ notImplemented(\"cluster.fork\");\r\nexport const disconnect = /* @__PURE__ */ notImplemented(\"cluster.disconnect\");\r\nexport const setupPrimary = /* @__PURE__ */ notImplemented(\"cluster.setupPrimary\");\r\nexport const setupMaster = /* @__PURE__ */ notImplemented(\"cluster.setupMaster\");\r\n// Make ESM coverage happy\r\nexport const _events = [];\r\nexport const _eventsCount = 0;\r\nexport const _maxListeners = 0;\r\nexport class Worker extends EventEmitter {\r\n\t_connected = false;\r\n\tid = 0;\r\n\tget process() {\r\n\t\treturn globalThis.process;\r\n\t}\r\n\tget exitedAfterDisconnect() {\r\n\t\treturn this._connected;\r\n\t}\r\n\tisConnected() {\r\n\t\treturn this._connected;\r\n\t}\r\n\tisDead() {\r\n\t\treturn true;\r\n\t}\r\n\tsend(message, sendHandle, options, callback) {\r\n\t\treturn false;\r\n\t}\r\n\tkill(signal) {\r\n\t\tthis._connected = false;\r\n\t}\r\n\tdestroy(signal) {\r\n\t\tthis._connected = false;\r\n\t}\r\n\tdisconnect() {\r\n\t\tthis._connected = false;\r\n\t}\r\n}\r\nclass _Cluster extends EventEmitter {\r\n\tWorker = Worker;\r\n\tisMaster = isMaster;\r\n\tisPrimary = isPrimary;\r\n\tisWorker = isWorker;\r\n\tSCHED_NONE = SCHED_NONE;\r\n\tSCHED_RR = SCHED_RR;\r\n\tschedulingPolicy = SCHED_RR;\r\n\tsettings = settings;\r\n\tworkers = workers;\r\n\tsetupPrimary() {\r\n\t\treturn setupPrimary();\r\n\t}\r\n\tsetupMaster() {\r\n\t\treturn setupPrimary();\r\n\t}\r\n\tdisconnect() {\r\n\t\treturn disconnect();\r\n\t}\r\n\tfork() {\r\n\t\treturn fork();\r\n\t}\r\n}\r\nexport default new _Cluster();\r\n"],
  "mappings": ";;;;;;AAAA,SAAS,oBAAoB;AAEtB,IAAM,aAAa;AACnB,IAAM,WAAW;AACjB,IAAM,WAAW;AACjB,IAAM,YAAY;AAClB,IAAM,WAAW;AACjB,IAAM,mBAAmB;AACzB,IAAM,WAAW,CAAC;AAClB,IAAM,UAAU,CAAC;AACjB,IAAM,OAAuB,eAAe,cAAc;AAC1D,IAAM,aAA6B,eAAe,oBAAoB;AACtE,IAAM,eAA+B,eAAe,sBAAsB;AAC1E,IAAM,cAA8B,eAAe,qBAAqB;AAExE,IAAM,UAAU,CAAC;AACjB,IAAM,eAAe;AACrB,IAAM,gBAAgB;AACtB,IAAM,SAAN,cAAqB,aAAa;AAAA,EACxC,aAAa;AAAA,EACb,KAAK;AAAA,EACL,IAAI,UAAU;AACb,WAAO,WAAW;AAAA,EACnB;AAAA,EACA,IAAI,wBAAwB;AAC3B,WAAO,KAAK;AAAA,EACb;AAAA,EACA,cAAc;AACb,WAAO,KAAK;AAAA,EACb;AAAA,EACA,SAAS;AACR,WAAO;AAAA,EACR;AAAA,EACA,KAAK,SAAS,YAAY,SAAS,UAAU;AAC5C,WAAO;AAAA,EACR;AAAA,EACA,KAAK,QAAQ;AACZ,SAAK,aAAa;AAAA,EACnB;AAAA,EACA,QAAQ,QAAQ;AACf,SAAK,aAAa;AAAA,EACnB;AAAA,EACA,aAAa;AACZ,SAAK,aAAa;AAAA,EACnB;AACD;AACA,IAAM,WAAN,cAAuB,aAAa;AAAA,EACnC,SAAS;AAAA,EACT,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,aAAa;AAAA,EACb,WAAW;AAAA,EACX,mBAAmB;AAAA,EACnB,WAAW;AAAA,EACX,UAAU;AAAA,EACV,eAAe;AACd,WAAO,aAAa;AAAA,EACrB;AAAA,EACA,cAAc;AACb,WAAO,aAAa;AAAA,EACrB;AAAA,EACA,aAAa;AACZ,WAAO,WAAW;AAAA,EACnB;AAAA,EACA,OAAO;AACN,WAAO,KAAK;AAAA,EACb;AACD;AACA,IAAO,kBAAQ,IAAI,SAAS;",
  "names": []
}
